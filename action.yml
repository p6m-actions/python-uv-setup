name: "Python UV Setup"
description: "A Github Action to setup UV and caching for UV Virtual Environments."
author: "Jimmie Fulton <jimmie.fulton@gmail.com>"

# Define the inputs for this action
inputs:
  version:
    description: "The version of uv to install"
    required: false
    default: "latest"
  python-version:
    description: "The version of Python to install"
    required: false

# Define the outputs for this action
outputs:
  version:
    description: "The actual version of uv installed"
    value: ${{ steps.uv-version.outputs.version }}
  python-version:
    description: "The actual version of Python installed"
    value: ${{ steps.python-version.outputs.version }}

# Define the runs configuration
runs:
  using: "composite"
  steps:
    # Setup Python if version is specified
    - name: Setup Python
      if: inputs.python-version != ''
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    # Get Python version
    - name: Get Python version
      id: python-version
      shell: bash
      run: |
        VERSION=$(python --version 2>&1 | cut -d' ' -f2 || echo "not-installed")
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    # Cache UV installation
    - name: Cache UV installation
      uses: actions/cache@v3
      with:
        path: ~/.local/share/uv
        key: uv-install-${{ runner.os }}-${{ inputs.version }}

    # Install UV
    - name: Install UV
      shell: bash
      run: |
        if ! command -v uv &> /dev/null; then
          if [[ "${{ inputs.version }}" == "latest" ]]; then
            curl -LsSf https://astral.sh/uv/install.sh | sh
          else
            curl -LsSf https://astral.sh/uv/${{ inputs.version }}/install.sh | sh
          fi
          
          # Add UV to PATH for current session
          export PATH="$HOME/.local/bin:$PATH"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        fi

    # Get UV version
    - name: Get UV version
      id: uv-version
      shell: bash
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        VERSION=$(uv --version | cut -d' ' -f2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    # Cache UV cache directory
    - name: Cache UV cache directory
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: uv-cache-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-cache-${{ runner.os }}-

    # Cache UV virtual environment
    - name: Cache UV virtual environment
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: uv-venv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-venv-${{ runner.os }}-

    # Configure UV environment
    - name: Configure UV environment
      shell: bash
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        echo "UV_IN_PROJECT=true" >> $GITHUB_ENV

# Define the branding for the action in the GitHub Marketplace
branding:
  icon: "package"
  color: "purple"